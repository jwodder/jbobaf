The current general goal is to implement various functions, types, values, et
cetera in Haskell & Perl (et alii?) for performing the following tasks:
 - Lojban morphology:
  - determining whether a given string is a valid {gismu}, {lujvo}, {fu'ivla},
    {cmavo}, or {cmene}
  - splitting a {lujvo} or {lujvo cmevla} into its component {rafsi}
  - combining {rafsi} into a {lujvo} or {lujvo cmevla}
  - calculating the score of a {lujvo} or {lujvo cmevla}
  - splitting a string of text into Lojban words
  - determining whether a given character or string is a Lojban vowel
    (including or excluding Y), Lojban consonant, initial consonant pair, or
    valid consonant pair
  - determining the morphological type of a word ({gismu}, {cmavo}, etc.)
  - converting a word into a regular, "normalized" form that is free of variant
    orthographies and superfluous characters
  - recognizing type-3 {fu'ivla} and extracting their {rafsi}
  - splitting a word into syllables?
 - Word lists:
  - retrieving all entries in valsi.tsv
  - searching for one or more items in valsi.tsv by any of the fields present
    (strict substring search only; regexes sold separately)
  - retrieving individual fields (including individual {rafsi}) from an entry
    in valsi.tsv
  - getting an entry from valsi.tsv at random
  - doing the above with one of the official Lojban word lists (gismu.txt or
    cmavo.txt) in place of valsi.tsv
  - printing out a {valsi} entry in an arguably pretty format
 - Long-term goals:
  - parsing & producing a syntax tree for Lojban text
  - translating Lojban text into English
